{"version":3,"file":"component---src-pages-gallery-view-index-js-d4a8be3c43084d484bd2.js","mappings":"8NASqBA,EAAAA,SAAAA,GACnB,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MAeFC,YAAc,WACZ,OAAI,EAAKC,MAAMC,KAEX,uBAAKC,UAAU,0CACb,gBAAC,IAAD,CACEC,KAAK,OACLC,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,OAMb,uBAAKL,UAAU,mDACZ,EAAKF,MAAMQ,KAAKC,KAAI,SAACC,GACpB,OACE,uBACER,UAAU,kJACVS,IAAKD,EAASE,GACdC,QAAS,SAACC,GAAD,OAAO,EAAKC,aAAaD,EAAGJ,EAASE,MAE9C,uBACEI,IAAKN,EAASO,gBACdC,IAAI,QACJhB,UAAU,iBA1CP,EAoDnBiB,eAAiB,WACf,GAAI,EAAKnB,MAAMoB,SACb,OACE,kCAEG,EAAKpB,MAAMqB,iBAzDD,EA+DnBN,aAAe,SAACD,EAAGF,GACP,SAAVE,EAAEX,MAAmB,EAAKmB,SAAS,CAAEF,UAAU,EAAMC,eAAgBT,KA9DrE,EAAKZ,MAAQ,CACXQ,KAAM,EAAKV,MAAMyB,OACjBtB,KAAM,EAAKH,MAAM0B,WACjBJ,UAAU,EACVC,eAAgB,GAND,GADAxB,EAAAA,EAAAA,GAAAA,EAAAA,GASlB,kBAkEA,OAlEA,EAED4B,mBAAA,SAAmBC,GACbC,KAAK7B,MAAM0B,YAAcE,EAAUF,YACrCG,KAAKL,SAAS,CAAErB,MAAM,EAAOO,KAAMmB,KAAK7B,MAAMyB,UAEjD,EAqDDK,OAAA,WACE,OACE,gBAAC,WAAD,KACGD,KAAK5B,cACL4B,KAAKR,mBAGX,EA3EkBtB,CAAgBgC,EAAAA,WCmBhBC,EAAAA,SAAAA,GACnB,WAAYhC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MA8GFiC,OAAS,WACPC,QAAQC,IAAI,YA9GZ,EAAKjC,MAAQ,CACXkC,eAAe,EACfC,SAAU,KACVC,aAAc,EACd5B,KAAM,GACN6B,MAAO,EAAKvC,MAAMwC,SAASC,OAAOC,MAAM,GAExCC,aAAc,EACdC,cAAc,EACdC,aAAa,GAXE,GADAb,EAAAA,EAAAA,GAAAA,EAAAA,GAclB,kBA8JA,OA9JA,EACDc,kBAAA,WAAqB,IAAD,OACdC,EAAM,WAAalB,KAAK3B,MAAMqC,MAET,WAArBV,KAAK3B,MAAMqC,QACbQ,EAAM,IAERb,QAAQC,IAAIN,KAAK3B,MAAM6C,KACvBC,IAAAA,IACOC,EAAAA,GAAaF,GACjBG,MAAK,SAACC,GACL,IAAI1B,EAAS0B,EAASzC,KAyCtB,EAAKc,SAAS,CAAEd,KAAMe,IACtB,EAAKD,SAAS,CAAEqB,aAAa,IAC7BX,QAAQC,IAAIV,MAEb2B,OAAM,SAACC,GACNnB,QAAQC,IAAIkB,O,EA4ClBvB,OAAA,WACE,OACE,gBAACwB,EAAA,EAAD,KAkCE,gBAACvD,EAAD,CAAS0B,OAAQI,KAAK3B,MAAMQ,KAAMgB,WAAYG,KAAK3B,MAAM2C,gBAqB9D,EA5KkBb,CAAeD,EAAAA","sources":["webpack://spec/./src/components/UI/Gallery/Gallery.js","webpack://spec/./src/pages/gallery/view/index.js"],"sourcesContent":["// Component Imports\r\nimport React, { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n// CSS Imports\r\n\r\n// Constants\r\n\r\n// Begin\r\nexport default class Gallery extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.photos,\r\n      wait: this.props.loadStatus,\r\n      lightbox: false,\r\n      lightbox_index: 0,\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.loadStatus != prevProps.loadStatus) {\r\n      this.setState({ wait: false, data: this.props.photos });\r\n    }\r\n  }\r\n\r\n  showGallery = () => {\r\n    if (this.state.wait) {\r\n      return (\r\n        <div className=\"flex h-90v justify-center items-center\">\r\n          <Loader\r\n            type=\"Puff\"\r\n            color=\"#00BFFF\"\r\n            height={100}\r\n            width={100}\r\n            timeout={100000} // 10 secs wait until error message shows\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div className=\"flex flex-wrap -mx-px overflow-hidden min-h-90v\">\r\n          {this.state.data.map((img_data) => {\r\n            return (\r\n              <div\r\n                className=\"my-1 px-1 overflow-hidden w-full sm:w-full md:w-1/2 lg:w-1/4 xl:w-1/5 items-center justify-center object-cover lg:max-h-48 xl:max-h-48 max-h-56\"\r\n                key={img_data.id}\r\n                onClick={(e) => this.showLightbox(e, img_data.id)}\r\n              >\r\n                <img\r\n                  src={img_data.thumb_image_url}\r\n                  alt=\"image\"\r\n                  className=\"w-full\"\r\n                />\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderLightbox = () => {\r\n    if (this.state.lightbox) {\r\n      return (\r\n        <div>\r\n          GGWP\r\n          {this.state.lightbox_index}\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  showLightbox = (e, id) => {\r\n    e.type == \"click\" && this.setState({ lightbox: true, lightbox_index: id });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.showGallery()}\r\n        {this.renderLightbox()}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","// Import Components\r\nimport React, { Component } from \"react\";\r\nimport Layout from \"components/UI/Layout/Layout\";\r\nimport axios from \"axios\";\r\n// import Gallery from \"react-photo-gallery\";\r\n// import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { galleryURL } from \"../../../components/Routes\";\r\n// import {\r\n//   faChevronRight,\r\n//   faChevronLeft,\r\n//   faTimes,\r\n// } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Gallery from \"components/UI/Gallery/Gallery\";\r\n// import LightGallery from 'lightgallery/react';\r\n// import lgThumbnail from 'lightgallery/plugins/thumbnail';\r\n// import lgZoom from 'lightgallery/plugins/zoom';\r\n\r\n//CSS\r\n// import 'lightgallery/css/lightgallery.css';\r\n// import 'lightgallery/css/lg-zoom.css';\r\n// import 'lightgallery/css/lg-thumbnail.css';\r\nimport \"assets/styles/gallery.css\";\r\n\r\n// Constants\r\n// const photos = require(\"./photos.json\");\r\n\r\n// console.log(lightgallery)\r\n// console.log(gallery)\r\nexport default class Images extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      FullImageCard: false,\r\n      imageUrl: null,\r\n      currentIndex: 0,\r\n      data: [],\r\n      title: this.props.location.search.slice(6),\r\n      // tt: this.props.location,\r\n      currentImage: 0,\r\n      viewerIsOpen: false,\r\n      load_status: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    let url = \"/?event=\" + this.state.title;\r\n    // console.log(this.state.tt)\r\n    if (this.state.title === \"Random\") {\r\n      url = \"\";\r\n    }\r\n    console.log(this.state.url);\r\n    axios\r\n      .get(galleryURL + url)\r\n      .then((response) => {\r\n        let photos = response.data;\r\n        // function select(a,b){\r\n        //     if(a.year>b.year){\r\n        //         return 1;\r\n        //     }\r\n        //     else{\r\n        //         return -1;\r\n        //     }\r\n        // }\r\n        // rs.sort(select);\r\n        // console.log(rs);\r\n        // const photos = rs;\r\n        // for (let i = 0; i < response.data.length; i++) {\r\n        //     rs[i].src = response.data[i].thumb_image_url;\r\n        //     rs[i].width = 3;\r\n        //     rs[i].height = 4;\r\n        //     if (i % 3 === 0) {\r\n        //         rs[i].width = 4;\r\n        //         rs[i].height = 3;\r\n        //     }\r\n        //     if (i % 2 === 1) {\r\n        //         rs[i].width = 3;\r\n        //         rs[i].height = 2;\r\n        //     }\r\n        //     else if (i % 2 === 0) {\r\n        //         rs[i].width = 4;\r\n        //         rs[i].height = 3;\r\n        //     }\r\n        //     if (i % 7 === 0) {\r\n        //         rs[i].width = 3;\r\n        //         rs[i].height = 4;\r\n        //     }\r\n        //     if (i % 5 === 0) {\r\n        //         rs[i].width = 6;\r\n        //         rs[i].height = 5;\r\n        //     }\r\n        //     if (i % 4 === 0) {\r\n        //         rs[i].width = 4;\r\n        //         rs[i].height = 2;\r\n        //     }\r\n        // }\r\n        this.setState({ data: photos });\r\n        this.setState({ load_status: false });\r\n        console.log(photos);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  // openLightbox = (event, { photo, index }) => {\r\n  //     this.setState({ currentImage: index, viewerIsOpen: true })\r\n  //     this.showImage(photo,index);\r\n  // };\r\n  // closeLightbox = () => {\r\n  //     this.setState({ currentImage: 0, viewerIsOpen: false })\r\n  // };\r\n  // showImage = (img, ind) => {\r\n  //     let url = this.state.data[ind].image_url;\r\n  //     this.setState({\r\n  //         FullImageCard: true,\r\n  //         imageUrl: url,\r\n  //         currentIndex: ind,\r\n  //     });\r\n  // }\r\n  // showPrev = (ind) => {\r\n  //     if (ind > 0) {\r\n  //         let url = this.state.data[ind - 1].image_url;\r\n  //         this.setState({\r\n  //             FullImageCard: true,\r\n  //             imageUrl: url,\r\n  //             currentIndex: ind - 1,\r\n  //         });\r\n  //     }\r\n  // }\r\n  // showNext = (ind) => {\r\n  //     if (ind < this.state.data.length - 1) {\r\n  //         let url = this.state.data[ind + 1].image_url;\r\n  //         this.setState({\r\n  //             FullImageCard: true,\r\n  //             imageUrl: url,\r\n  //             currentIndex: ind + 1,\r\n  //         });\r\n  //     }\r\n  // }\r\n  // exitButton = () => {\r\n  //     this.setState({ FullImageCard: false });\r\n  // }\r\n  onInit = () => {\r\n    console.log(\"LG init\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        {/* <React.Fragment> */}\r\n\r\n        {/* <h1 className=\"text-5xl font-bold text-center mt-16 sm:text-7xl md:text-8xl\">{this.state.title}</h1> */}\r\n        {/* {this.state.FullImageCard && (\r\n            <div id=\"overlay\">\r\n              <div\r\n                id=\"prevButton\"\r\n                className={\r\n                  this.state.currentIndex == 0 ? \"gallery-disabled\" : \"\"\r\n                }\r\n                onClick={() => this.showPrev(this.state.currentIndex)}\r\n              >\r\n                <FontAwesomeIcon icon={faChevronLeft} />\r\n              </div>\r\n              <img src={this.state.imageUrl} style={{ width: '70%'}}/>\r\n              <div\r\n                id=\"nextButton\"\r\n                className={\r\n                  this.state.currentIndex === this.state.data.length - 1\r\n                    ? \"gallery-disabled\"\r\n                    : \"nextButton\"\r\n                }\r\n                onClick={() => this.showNext(this.state.currentIndex)}\r\n              >\r\n                <FontAwesomeIcon icon={faChevronRight} />\r\n              </div>\r\n              <div id=\"exitButton\" onClick={() => this.exitButton()}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </div>\r\n            </div>\r\n          )} */}\r\n\r\n        {/* <div className=\"mx-8 lg:mx-16 2xl:mx-32 mt-16 pb-32\"> */}\r\n        <Gallery photos={this.state.data} loadStatus={this.state.load_status} />\r\n        {/* <LightGallery\r\n                onInit={this.onInit}\r\n                speed={500}\r\n                plugins={[lgThumbnail, lgZoom]}\r\n            >\r\n                {\r\n                    this.state.data.map((img_data) => {\r\n                        return(\r\n                            <a data-src={img_data.image_url} key={img_data.id} className=\"gallery-item\">\r\n                                <img src={img_data.thumb_image_url} className=\"img-responsive\"/>\r\n                            </a>\r\n                        )\r\n                    })\r\n                }\r\n            </LightGallery> */}\r\n        {/* <div className=\"mt-10\"></div> */}\r\n        {/* </div> */}\r\n        {/* </React.Fragment> */}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"],"names":["Gallery","props","showGallery","state","wait","className","type","color","height","width","timeout","data","map","img_data","key","id","onClick","e","showLightbox","src","thumb_image_url","alt","renderLightbox","lightbox","lightbox_index","setState","photos","loadStatus","componentDidUpdate","prevProps","this","render","Component","Images","onInit","console","log","FullImageCard","imageUrl","currentIndex","title","location","search","slice","currentImage","viewerIsOpen","load_status","componentDidMount","url","axios","galleryURL","then","response","catch","err","Layout"],"sourceRoot":""}