{"version":3,"file":"component---src-pages-gallery-view-index-js-9df7334844458334f215.js","mappings":"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","sources":["webpack://spec/./src/pages/gallery/view/index.js"],"sourcesContent":["// Import Components\r\nimport React, { Component } from \"react\";\r\nimport Layout from \"components/UI/Layout/Layout\";\r\nimport axios from \"axios\";\r\n\r\n// Swiper\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Pagination, Autoplay,Navigation } from \"swiper\";\r\nimport 'swiper/css';\r\nimport 'swiper/css/pagination';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { galleryURL } from \"assets/utils/Routes\";\r\nimport {\r\n  faChevronRight,\r\n  faChevronLeft,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n//CSS\r\nimport \"assets/styles/gallery.css\";\r\nimport \"assets/styles/gallerygrid.css\";\r\n// Constants\r\n// const photo = require(\"./photos.json\");\r\n\r\nexport default class Images extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      FullImageCard: false,\r\n      imageUrl: null,\r\n      currentIndex: 0,\r\n      data: [],\r\n      title: this.props.location.search.slice(6),\r\n      currentImage: 0,\r\n      viewerIsOpen: false,\r\n      load_status: true,\r\n      touchStart:0,\r\n      touchEnd:0,\r\n      imageClick: false,\r\n      windowWidth: window.innerWidth,\r\n    };\r\n  }\r\n  handleResize = (e) => {\r\n    this.setState({ windowWidth: window.innerWidth });\r\n   };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    let url = \"/?event=\" + this.state.title;\r\n    if (this.state.title === \"Random\") {\r\n      url = \"\";\r\n    }\r\n    \r\n    console.log(this.state.url);\r\n    axios\r\n      .get(galleryURL + url)\r\n      .then((response) => {\r\n        let photos = response.data;\r\n        function select(a,b){\r\n            if(a.year>b.year){\r\n                return 1;\r\n            }\r\n            else{\r\n                return -1;\r\n            }\r\n        }\r\n        photos.sort(select);\r\n        this.setState({ data: photos });\r\n        this.setState({ load_status: false });\r\n        // console.log(this.state.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n   } \r\n  closeLightbox = () => {\r\n    this.setState({ FullImageCard: false });\r\n    console.log('called');\r\n  };\r\n  openLightbox = (photo, index ) => {\r\n      this.setState({ currentImage: index,currentIndex:index, viewerIsOpen: true })\r\n      this.showImage(photo,index);   \r\n  };\r\n  showImage = (img, ind) => {\r\n      let url = this.state.data[ind].image_url;\r\n      this.setState({\r\n          FullImageCard: true,\r\n          imageUrl: url,\r\n          currentIndex: ind,\r\n      });\r\n  }\r\n  exitButton = () => {\r\n    console.log('exit');\r\n      this.setState({ FullImageCard: false });\r\n  }\r\n  render() {\r\n    const { windowWidth } = this.state; \r\n    return (\r\n      <Layout>\r\n        <React.Fragment>\r\n        {/* <h1>{ windowWidth } </h1> */}\r\n        <h1 className=\"text-5xl font-bold text-center mt-16 sm:text-7xl md:text-8xl\">{this.state.title}</h1>\r\n        {this.state.FullImageCard && (\r\n            <div \r\n            id=\"overlay\" className=\"lg:px-16\">\r\n            <div id=\"exitButton\" onClick={() => this.exitButton()}>\r\n                <FontAwesomeIcon icon={faTimes} />\r\n              </div>\r\n              <Swiper\r\n          modules={[Pagination, Autoplay,Navigation]}\r\n          pagination={{ dynamicBullets: true, clickable: true }}\r\n          loop={true}\r\n          // autoplay={{ delay: 4000, disableOnInteraction: false }}\r\n          spaceBetween={0}\r\n          slidesPerView={1}\r\n          navigation={ windowWidth>1000? true : false}\r\n          initialSlide={this.state.currentIndex}>\r\n          {this.state.data.map((image, index) => {\r\n            return (\r\n              <SwiperSlide key={index} >\r\n                <div\r\n                  key={index}\r\n                >\r\n                  <img\r\n                    src={image.image_url}\r\n                    alt={image.event}\r\n                    className=\"m-auto p-2 lg:max-w-[70%] max-w-[90%]\"\r\n             \r\n                  />\r\n                </div>\r\n              </SwiperSlide>\r\n            );\r\n          })}\r\n        </Swiper>\r\n            </div>\r\n          )}\r\n\r\n        <section class=\"mx-16 py-8 gallery-section\">\r\n        <div className=\"grid gap-8 grid-flow-row-dense gallery-grid\">\r\n          {this.state.data.map((img_data,ind) => {\r\n            return (\r\n              <div class=\"flex flex-col bg-cover bg-center cursor-pointer relative justify-end col-auto box-border rounded gallery-item\"\r\n              onClick={() => this.openLightbox(img_data,ind)}\r\n\r\n               style={{backgroundImage:`url(${img_data.thumb_image_url})`}}>\r\n              <div class=\" font-semibold p-4 bg-white text-black rounded\">\r\n                <div className=\"font-extrabold text-lg\">{img_data.event} {img_data.year}</div>   {img_data.sub_event}\r\n              </div>\r\n            </div>\r\n              \r\n            );\r\n          })}\r\n        </div>\r\n        </section>\r\n        </React.Fragment>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n"],"names":["Images","props","handleResize","e","setState","windowWidth","window","innerWidth","closeLightbox","FullImageCard","console","log","openLightbox","photo","index","currentImage","currentIndex","viewerIsOpen","showImage","img","ind","url","state","data","image_url","imageUrl","exitButton","title","location","search","slice","load_status","touchStart","touchEnd","imageClick","componentDidMount","addEventListener","this","axios","galleryURL","then","response","photos","sort","a","b","year","catch","err","componentWillUnmount","render","className","id","onClick","icon","faTimes","modules","Pagination","Autoplay","Navigation","pagination","dynamicBullets","clickable","loop","spaceBetween","slidesPerView","navigation","initialSlide","map","image","key","src","alt","event","class","img_data","style","backgroundImage","thumb_image_url","sub_event","Component"],"sourceRoot":""}