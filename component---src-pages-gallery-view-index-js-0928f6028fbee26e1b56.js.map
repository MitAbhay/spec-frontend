{"version":3,"file":"component---src-pages-gallery-view-index-js-0928f6028fbee26e1b56.js","mappings":"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","sources":["webpack://spec/./src/pages/gallery/view/index.js"],"sourcesContent":["// Components\nimport React, { Component } from \"react\";\nimport Layout from \"components/Layout/Layout\";\nimport axios from \"axios\";\nimport Head from \"utils/helmet\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport { Pagination, Autoplay, Navigation } from \"swiper\";\nimport Loader from \"react-loader-spinner\";\n\n// Icons and Styles\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport \"swiper/css\";\nimport \"swiper/css/pagination\";\nimport \"../gallery.css\";\nimport \"./gallerygrid.css\";\n\n//Constans, JSONs and Assests\nimport { galleryURL } from \"utils/routes\";\n\nexport default class Images extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      FullImageCard: false,\n      imageUrl: null,\n      currentIndex: 0,\n      data: [],\n      title: this.props.location.search.slice(6),\n      currentImage: 0,\n      viewerIsOpen: false,\n      load_status: true,\n      touchStart: 0,\n      touchEnd: 0,\n      imageClick: false,\n      // windowWidth: window.innerWidth,\n    };\n  }\n\n  componentDidMount() {\n    let url = \"/?event=\" + this.state.title;\n    if (this.state.title === \"SPEC\") {\n      url = \"\";\n    }\n\n    // console.log(this.state.url);\n    axios\n      .get(galleryURL + url)\n      .then((response) => {\n        let photos = response.data;\n        function select(a, b) {\n          if (a.year > b.year) {\n            return 1;\n          } else {\n            return -1;\n          }\n        }\n        photos.sort(select);\n        this.setState({ data: photos });\n        this.setState({ load_status: false });\n        console.log(this.state.data);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n  closeLightbox = () => {\n    this.setState({ FullImageCard: false });\n  };\n  openLightbox = (photo, index) => {\n    this.setState({\n      currentImage: index,\n      currentIndex: index,\n      viewerIsOpen: true,\n    });\n    this.showImage(photo, index);\n  };\n  showImage = (img, ind) => {\n    let url = this.state.data[ind].image_url;\n    this.setState({\n      FullImageCard: true,\n      imageUrl: url,\n      currentIndex: ind,\n    });\n  };\n  exitButton = () => {\n    // console.log('exit');\n    this.setState({ FullImageCard: false });\n  };\n  render() {\n    const { windowWidth } = this.state;\n    if (this.state.load_status) {\n      return (\n        <>\n          <Head title=\"Team\" />\n          <Layout>\n            <div className=\"flex h-90v justify-center items-center\">\n              <Loader\n                type=\"Puff\"\n                color=\"#00BFFF\"\n                height={100}\n                width={100}\n                timeout={100000} // 10 secs wait until error message shows\n              />\n            </div>\n          </Layout>\n        </>\n      );\n    } else {\n      return (\n        <Layout>\n          <React.Fragment>\n            <h1 className=\"text-5xl font-bold text-center mt-16 sm:text-7xl md:text-8xl\">\n              {this.state.title}\n            </h1>\n            {this.state.FullImageCard && (\n              <div id=\"overlay\" className=\"lg:px-16\">\n                <div id=\"exitButton\" onClick={() => this.exitButton()}>\n                  <FontAwesomeIcon icon={faTimes} />\n                </div>\n                <Swiper\n                  modules={[Pagination, Autoplay, Navigation]}\n                  pagination={{ dynamicBullets: true, clickable: true }}\n                  loop={true}\n                  // autoplay={{ delay: 4000, disableOnInteraction: false }}\n                  spaceBetween={0}\n                  slidesPerView={1}\n                  navigation={true}\n                  initialSlide={this.state.currentIndex}\n                >\n                  {this.state.data.map((image, index) => {\n                    return (\n                      <SwiperSlide key={index}>\n                        <div key={index}>\n                          <img\n                            src={image.image_url}\n                            alt={image.event}\n                            className=\"m-auto p-2 lg:max-w-[70%] max-w-[90%]\"\n                            loading=\"lazy\"\n                          />\n                        </div>\n                      </SwiperSlide>\n                    );\n                  })}\n                </Swiper>\n              </div>\n            )}\n\n            <section class=\"mx-16 py-8 gallery-section\">\n              <div className=\"grid gap-8 grid-flow-row-dense gallery-grid\">\n                {this.state.data.map((img_data, ind) => {\n                  return (\n                    <div\n                      class=\"flex flex-col bg-cover bg-center cursor-pointer relative justify-end col-auto box-border rounded gallery-item\"\n                      onClick={() => this.openLightbox(img_data, ind)}\n                      loading=\"lazy\"\n                      style={{\n                        backgroundImage: `url(${img_data.thumb_image_url})`,\n                      }}\n                    >\n                      <div class=\" font-semibold p-4 bg-white text-black rounded\">\n                        <div className=\"font-extrabold text-lg\">\n                          {img_data.event} {img_data.year}\n                        </div>{\" \"}\n                        {img_data.sub_event}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </section>\n          </React.Fragment>\n        </Layout>\n      );\n    }\n  }\n}\n"],"names":["Images","props","closeLightbox","setState","FullImageCard","openLightbox","photo","index","currentImage","currentIndex","viewerIsOpen","showImage","img","ind","url","state","data","image_url","imageUrl","exitButton","title","location","search","slice","load_status","touchStart","touchEnd","imageClick","componentDidMount","this","axios","galleryURL","then","response","photos","sort","a","b","year","console","log","catch","err","render","windowWidth","className","type","color","height","width","timeout","id","onClick","icon","faTimes","modules","Pagination","Autoplay","Navigation","pagination","dynamicBullets","clickable","loop","spaceBetween","slidesPerView","navigation","initialSlide","map","image","key","src","alt","event","loading","class","img_data","style","backgroundImage","thumb_image_url","sub_event","Component"],"sourceRoot":""}