{"version":3,"file":"component---src-pages-gallery-view-index-js-f512fc720bc17373ceca.js","mappings":"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","sources":["webpack://spec/./src/pages/gallery/view/index.js"],"sourcesContent":["// Import Components\r\nimport React, { Component } from \"react\";\r\nimport Layout from \"components/UI/Layout/Layout\";\r\nimport axios from \"axios\";\r\nimport Head from \"assets/utils/helmet\";\r\n\r\n// Swiper\r\nimport { Swiper, SwiperSlide } from 'swiper/react';\r\nimport { Pagination, Autoplay, Navigation } from \"swiper\";\r\nimport 'swiper/css';\r\nimport 'swiper/css/pagination';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { galleryURL } from \"assets/utils/Routes\";\r\nimport {\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\n//CSS\r\nimport \"assets/styles/gallery.css\";\r\nimport \"assets/styles/gallerygrid.css\";\r\n// Constants\r\n// const photo = require(\"./photos.json\");\r\n\r\nexport default class Images extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      FullImageCard: false,\r\n      imageUrl: null,\r\n      currentIndex: 0,\r\n      data: [],\r\n      title: this.props.location.search.slice(6),\r\n      currentImage: 0,\r\n      viewerIsOpen: false,\r\n      load_status: true,\r\n      touchStart: 0,\r\n      touchEnd: 0,\r\n      imageClick: false,\r\n      // windowWidth: window.innerWidth,\r\n    };\r\n  }\r\n  // handleResize = (e) => {\r\n  //   this.setState({ windowWidth: window.innerWidth });\r\n  // };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.handleResize);\r\n    let url = \"/?event=\" + this.state.title;\r\n    if (this.state.title === \"Random\") {\r\n      url = \"\";\r\n    }\r\n\r\n    // console.log(this.state.url);\r\n    axios\r\n      .get(galleryURL + url)\r\n      .then((response) => {\r\n        let photos = response.data;\r\n        function select(a, b) {\r\n          if (a.year > b.year) {\r\n            return 1;\r\n          }\r\n          else {\r\n            return -1;\r\n          }\r\n        }\r\n        photos.sort(select);\r\n        this.setState({ data: photos });\r\n        this.setState({ load_status: false });\r\n        console.log(this.state.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n  componentWillUnmount() {\r\n    // window.addEventListener(\"resize\", this.handleResize);\r\n  }\r\n  closeLightbox = () => {\r\n    this.setState({ FullImageCard: false });\r\n  };\r\n  openLightbox = (photo, index) => {\r\n    this.setState({ currentImage: index, currentIndex: index, viewerIsOpen: true })\r\n    this.showImage(photo, index);\r\n  };\r\n  showImage = (img, ind) => {\r\n    let url = this.state.data[ind].image_url;\r\n    this.setState({\r\n      FullImageCard: true,\r\n      imageUrl: url,\r\n      currentIndex: ind,\r\n    });\r\n  }\r\n  exitButton = () => {\r\n    // console.log('exit');\r\n    this.setState({ FullImageCard: false });\r\n  }\r\n  render() {\r\n    // const { windowWidth } = this.state;\r\n    if (this.state.load_status) {\r\n      return (\r\n        <>\r\n          <Head title=\"Team\" />\r\n          <Layout>\r\n            <div className=\"flex h-90v justify-center items-center\">\r\n              <Loader\r\n                type=\"Puff\"\r\n                color=\"#00BFFF\"\r\n                height={100}\r\n                width={100}\r\n                timeout={100000} // 10 secs wait until error message shows\r\n              />\r\n            </div>\r\n          </Layout>\r\n        </>\r\n      )\r\n    }\r\n    else {\r\n      return (\r\n        <Layout>\r\n          <React.Fragment>\r\n\r\n            {/* <h1>{ windowWidth } </h1> */}\r\n            <h1 className=\"text-5xl font-bold text-center mt-16 sm:text-7xl md:text-8xl\">{this.state.title}</h1>\r\n            {this.state.FullImageCard && (\r\n              <div\r\n                id=\"overlay\" className=\"lg:px-16\">\r\n                <div id=\"exitButton\" onClick={() => this.exitButton()}>\r\n                  <FontAwesomeIcon icon={faTimes} />\r\n                </div>\r\n                <Swiper\r\n                  modules={[Pagination, Autoplay, Navigation]}\r\n                  pagination={{ dynamicBullets: true, clickable: true }}\r\n                  loop={true}\r\n                  // autoplay={{ delay: 4000, disableOnInteraction: false }}\r\n                  spaceBetween={0}\r\n                  slidesPerView={1}\r\n                  navigation={true}\r\n                  initialSlide={this.state.currentIndex}>\r\n                  {this.state.data.map((image, index) => {\r\n                    return (\r\n                      <SwiperSlide key={index} >\r\n                        <div\r\n                          key={index}\r\n                        >\r\n                          <img\r\n                            src={image.image_url}\r\n                            alt={image.event}\r\n                            className=\"m-auto p-2 lg:max-w-[70%] max-w-[90%]\"\r\n\r\n                          />\r\n                        </div>\r\n                      </SwiperSlide>\r\n                    );\r\n                  })}\r\n                </Swiper>\r\n              </div>\r\n            )}\r\n\r\n            <section class=\"mx-16 py-8 gallery-section\">\r\n              <div className=\"grid gap-8 grid-flow-row-dense gallery-grid\">\r\n                {this.state.data.map((img_data, ind) => {\r\n                  return (\r\n                    <div class=\"flex flex-col bg-cover bg-center cursor-pointer relative justify-end col-auto box-border rounded gallery-item\"\r\n                      onClick={() => this.openLightbox(img_data, ind)}\r\n\r\n                      style={{ backgroundImage: `url(${img_data.thumb_image_url})` }}>\r\n                      <div class=\" font-semibold p-4 bg-white text-black rounded\">\r\n                        <div className=\"font-extrabold text-lg\">{img_data.event} {img_data.year}</div>   {img_data.sub_event}\r\n                      </div>\r\n                    </div>\r\n\r\n                  );\r\n                })}\r\n              </div>\r\n            </section>\r\n          </React.Fragment>\r\n        </Layout>\r\n      );\r\n    }\r\n  }\r\n}\r\n"],"names":["Images","props","closeLightbox","setState","FullImageCard","openLightbox","photo","index","currentImage","currentIndex","viewerIsOpen","showImage","img","ind","url","state","data","image_url","imageUrl","exitButton","title","location","search","slice","load_status","touchStart","touchEnd","imageClick","componentDidMount","window","addEventListener","this","handleResize","axios","galleryURL","then","response","photos","sort","a","b","year","console","log","catch","err","componentWillUnmount","render","className","type","color","height","width","timeout","id","onClick","icon","faTimes","modules","Pagination","Autoplay","Navigation","pagination","dynamicBullets","clickable","loop","spaceBetween","slidesPerView","navigation","initialSlide","map","image","key","src","alt","event","class","img_data","style","backgroundImage","thumb_image_url","sub_event","Component"],"sourceRoot":""}